# -*- coding: utf-8 -*-
"""Untitled29.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14Bj44NMwHnYmwb-NgxYDFLB7rXv7ZVtO
"""

from transformers import pipeline

# Initialize Hugging Face pipeline for summarization
summarizer = pipeline("summarization", model="facebook/bart-large-cnn")

def summarize_with_huggingface(content):
    """Summarize content using a Hugging Face model."""
    summary = summarizer(content, max_length=150, min_length=50, do_sample=False)
    return summary[0]['summary_text']

import requests
from bs4 import BeautifulSoup
from transformers import pipeline
import streamlit as st

# Initialize the Hugging Face model pipeline
summarizer = pipeline("summarization", model="facebook/bart-large-cnn")

def search_and_scrape(query):
    """Scrape Google search results."""
    headers = {"User-Agent": "Mozilla/5.0"}
    search_url = f"https://www.google.com/search?q={query}"
    response = requests.get(search_url, headers=headers)

    if response.status_code != 200:
        raise Exception("Failed to retrieve search results.")

    soup = BeautifulSoup(response.text, "html.parser")
    results = []
    for g in soup.find_all("div", class_="BNeawe s3v9rd AP7Wnd"):
        results.append(g.get_text())

    return "\n".join(results[:10])

def summarize_with_huggingface(content):
    """Summarize content using a Hugging Face model."""
    summary = summarizer(content, max_length=150, min_length=50, do_sample=False)
    return summary[0]['summary_text']

# Streamlit UI
st.set_page_config(page_title="Web Query System with Hugging Face", layout="wide")
st.title("üåê Web Query System with Hugging Face")

# User input
user_query = st.text_input("Enter your query:")

if st.button("Search and Summarize"):
    if not user_query.strip():
        st.error("Please enter a valid query.")
    else:
        with st.spinner("Processing..."):
            try:
                # Step 1: Search and scrape results
                content = search_and_scrape(user_query)

                # Step 2: Summarize using Hugging Face
                summary = summarize_with_huggingface(content)

                # Display results
                st.subheader("Summary of Results:")
                st.write(summary)
            except Exception as e:
                st.error(f"An error occurred: {e}")